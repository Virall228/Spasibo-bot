from aiogram import Router, types
from aiogram.filters import Command
from p2p_pay_bot.middleware.block import block_user, unblock_user, blocked_users

router = Router()

ADMIN_IDS = [123456789]  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π Telegram ID

@router.message(Command("block"))
async def block_command(message: types.Message):
    if message.from_user.id not in ADMIN_IDS:
        return await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")

    try:
        user_id = int(message.text.split()[1])
        block_user(user_id)
        await message.answer(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except:
        await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /block <user_id>")

@router.message(Command("unblock"))
async def unblock_command(message: types.Message):
    if message.from_user.id not in ADMIN_IDS:
        return await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")

    try:
        user_id = int(message.text.split()[1])
        unblock_user(user_id)
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except:
        await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /unblock <user_id>")

@router.message(Command("blocked"))
async def list_blocked(message: types.Message):
    if message.from_user.id not in ADMIN_IDS:
        return await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")

    if not blocked_users:
        return await message.answer("‚úÖ –ù–∏–∫—Ç–æ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")

    await message.answer("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã:
" + "
".join(map(str, blocked_users)))